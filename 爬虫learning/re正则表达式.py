import re
'''表达字符串的特征——简洁，一行胜千言；
通用的字符串表达框架；
判断某字符串的特征归属'''

'''在文本处理中十分常用
1、表达文本类型的特征（病毒、入侵等）；
2、同时查找或替换一组字符串；
3、匹配字符串的全部或部分'''

'''正则表达式的使用
编译：将符合字符串表达式语法的字符串转换成正则表达式特征'''

'''经典正则表达式实例
由26个字母组成的字符串：^[A-Za-z]+$
由26个字母和数字组成的字符串：^[A-Za-z0-9]+$
整数形式的字符串：^-?[0-9]+$或^-?\d+$
正整数形式的字符串(0也排除了)：^[0-9]*[1-9][0-9]*$
中国境内邮政编码：[1-9]\d{5}
匹配中文字符：[\u4e00-\u9fa5]
国内电话号码：\d{3}-\d{8}|\d{4}-\d{7}
IP地址：(([1-9]?\d|1\d{2}|2[0-4]\d|25[0-5]).){3}([1-9]?\d|1\d{2}|2[0-4]\d|25[0-5])
'''

'''正则表达式的表示类型
1、原生字符串类型（raw string是不包含转义符的字符串）：raw string类型表示正则表达式，表示为r'[1-9]\d{5}'这样子
2、string类型：'[1-9]\\d{5}'这样子'''

#函数式用法：一次性操作
rst0 = re.search(r'[1-9]\d{5}','BIT 100081')
#面向对象用法：编译后的多次操作
pat = re.compile(r'[1-9]\d{5}')
rst1 = pat.search('BIT 100081')
print(type(rst1))

#最小匹配：.*?
#贪婪匹配：.*